#!/bin/bash
#
# Torque Dash - Quick Install Script for Ubuntu
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ Ubuntu 20.04/22.04/24.04
#
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   chmod +x QUICK_INSTALL_UBUNTU.sh
#   sudo ./QUICK_INSTALL_UBUNTU.sh
#

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "=================================="
echo "  Torque Dash - Quick Install"
echo "=================================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$EUID" -ne 0 ]; then 
    error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å sudo!"
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
REAL_USER=${SUDO_USER:-$USER}
REAL_HOME=$(eval echo ~$REAL_USER)

info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $REAL_USER"
info "–î–æ–º–∞—à–Ω—è—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $REAL_HOME"
echo ""

# 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update
apt upgrade -y

# 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
apt install -y curl wget git unzip build-essential

# 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 20.x LTS..."
if ! command -v node &> /dev/null; then
    curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
    apt install -y nodejs
    info "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
else
    info "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
fi

# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL
info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL..."
if ! command -v psql &> /dev/null; then
    apt install -y postgresql postgresql-contrib
    systemctl enable postgresql
    systemctl start postgresql
    info "PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    info "PostgreSQL —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
DB_PASSWORD=$(openssl rand -base64 32 | tr -dc 'a-zA-Z0-9' | head -c 24)

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ë–î
sudo -u postgres psql -c "DROP DATABASE IF EXISTS torquedash;" 2>/dev/null || true
sudo -u postgres psql -c "DROP USER IF EXISTS torquedash;" 2>/dev/null || true
sudo -u postgres psql -c "CREATE USER torquedash WITH PASSWORD '$DB_PASSWORD';" 
sudo -u postgres psql -c "CREATE DATABASE torquedash OWNER torquedash;"
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE torquedash TO torquedash;"

info "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
info "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ë–î: torquedash"
info "–ü–∞—Ä–æ–ª—å –ë–î: $DB_PASSWORD"

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –≤ —Ñ–∞–π–ª
echo "$DB_PASSWORD" > $REAL_HOME/.torquedash_db_password
chown $REAL_USER:$REAL_USER $REAL_HOME/.torquedash_db_password
chmod 600 $REAL_HOME/.torquedash_db_password
info "–ü–∞—Ä–æ–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: $REAL_HOME/.torquedash_db_password"

# 6. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Torque Dash..."
INSTALL_DIR="$REAL_HOME/torque-dash"

if [ -d "$INSTALL_DIR" ]; then
    warn "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $INSTALL_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª–∏—Ç—å? (y/N)"
    read -r response
    if [[ "$response" =~ ^[Yy]$ ]]; then
        rm -rf "$INSTALL_DIR"
    else
        error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞"
    fi
fi

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å GitHub
cd $REAL_HOME

# –û—á–∏—Å—Ç–∫–∞ git credential cache (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
sudo -u $REAL_USER git config --global --unset credential.helper 2>/dev/null || true

info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å https://github.com/NeepOwO/torque-dash.git"
if sudo -u $REAL_USER git clone https://github.com/NeepOwO/torque-dash.git; then
    info "‚úÖ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
else
    warn "Git clone –Ω–µ —É–¥–∞–ª—Å—è. –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± (ZIP)..."
    
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±: —Å–∫–∞—á–∞—Ç—å ZIP –∞—Ä—Ö–∏–≤
    info "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ ZIP –∞—Ä—Ö–∏–≤–∞..."
    sudo -u $REAL_USER wget -O torque-dash.zip https://github.com/NeepOwO/torque-dash/archive/refs/heads/master.zip || {
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –ø—Ä–æ–µ–∫—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ."
    }
    
    info "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞..."
    sudo -u $REAL_USER unzip -q torque-dash.zip
    sudo -u $REAL_USER mv torque-dash-master torque-dash
    sudo -u $REAL_USER rm torque-dash.zip
    info "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ ZIP —É—Å–ø–µ—à–Ω–∞"
fi

cd $INSTALL_DIR

# 7. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Node.js..."
sudo -u $REAL_USER npm install

# 8. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫..."
mkdir -p public/uploads
chown -R $REAL_USER:$REAL_USER public/uploads
chmod 755 public/uploads

# 9. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–ª—é—á–µ–π —Å–µ—Å—Å–∏–∏
SESSION_KEY1=$(openssl rand -base64 32)
SESSION_KEY2=$(openssl rand -base64 32)
SESSION_KEY3=$(openssl rand -base64 32)

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
cat > .env << EOF
PORT=3000
DATABASE_URL=postgres://torquedash:$DB_PASSWORD@localhost:5432/torquedash
SESSION_KEYS=$SESSION_KEY1,$SESSION_KEY2,$SESSION_KEY3
LIVE_ONLY_MODE=false
NODE_ENV=production
EOF

chown $REAL_USER:$REAL_USER .env
chmod 600 .env

info "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ (.env)"

# 10. –°–æ–∑–¥–∞–Ω–∏–µ systemd service
info "–°–æ–∑–¥–∞–Ω–∏–µ systemd service..."

cat > /etc/systemd/system/torque-dash.service << EOF
[Unit]
Description=Torque Dash - OBD2 Dashboard
Documentation=https://github.com/yourusername/torque-dash
After=network.target postgresql.service

[Service]
Type=simple
User=$REAL_USER
WorkingDirectory=$INSTALL_DIR
Environment="NODE_ENV=production"
EnvironmentFile=$INSTALL_DIR/.env
ExecStart=$(which node) $INSTALL_DIR/app.js
Restart=on-failure
RestartSec=10
StandardOutput=journal
StandardError=journal
SyslogIdentifier=torque-dash

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable torque-dash

info "Systemd service —Å–æ–∑–¥–∞–Ω"

# 11. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall
info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall (UFW)..."
if command -v ufw &> /dev/null; then
    ufw --force enable
    ufw allow 22/tcp  # SSH
    ufw allow 3000/tcp  # Node.js
    ufw reload
    info "Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–ø–æ—Ä—Ç—ã 22, 3000 –æ—Ç–∫—Ä—ã—Ç—ã)"
else
    warn "UFW –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ firewall –≤—Ä—É—á–Ω—É—é."
fi

# 12. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
info "–ó–∞–ø—É—Å–∫ Torque Dash..."
systemctl start torque-dash
sleep 3

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
if systemctl is-active --quiet torque-dash; then
    info "‚úÖ Torque Dash —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
else
    error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Torque Dash. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: sudo journalctl -u torque-dash -n 50"
fi

# 13. –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
echo ""
echo "=================================="
echo "  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "=================================="
echo ""
echo -e "${GREEN}‚úÖ Torque Dash —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!${NC}"
echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "  - –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $INSTALL_DIR"
echo "  - –ü–æ—Ä—Ç: 3000"
echo "  - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: torquedash"
echo "  - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ë–î: torquedash"
echo "  - –ü–∞—Ä–æ–ª—å –ë–î: (—Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $REAL_HOME/.torquedash_db_password)"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø:"
echo "  - –õ–æ–∫–∞–ª—å–Ω–æ: http://localhost:3000"
echo "  - –ü–æ —Å–µ—Ç–∏: http://$(hostname -I | awk '{print $1}'):3000"
echo ""
echo "üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Torque Pro:"
echo "  1. –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ"
echo "  2. Settings ‚Üí Data Logging & Upload"
echo "  3. Webserver URL: http://$(hostname -I | awk '{print $1}'):3000/api/upload"
echo "  4. Email Address: <–≤–∞—à email –∏–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏>"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º:"
echo "  sudo systemctl start torque-dash     # –ó–∞–ø—É—Å—Ç–∏—Ç—å"
echo "  sudo systemctl stop torque-dash      # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
echo "  sudo systemctl restart torque-dash   # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"
echo "  sudo systemctl status torque-dash    # –°—Ç–∞—Ç—É—Å"
echo "  sudo journalctl -u torque-dash -f    # –õ–æ–≥–∏"
echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "  - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: $INSTALL_DIR/INSTALL_UBUNTU.md"
echo "  - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $INSTALL_DIR/USER_SETTINGS_GUIDE.md"
echo "  - Dashboard –≥–∞–π–¥: $INSTALL_DIR/DASHBOARD_GUIDE.md"
echo ""
echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ë–î –∏–∑ —Ñ–∞–π–ª–∞:"
echo "    cat $REAL_HOME/.torquedash_db_password"
echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ http://$(hostname -I | awk '{print $1}'):3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ!"
echo ""

